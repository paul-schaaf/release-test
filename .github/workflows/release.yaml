name: Release

env:
  CURL_TAG: -d '{"tag_name":"${{ github.event.inputs.tag }}"}'


on:
  workflow_dispatch:
    inputs:
      tag:
        description: release tag
        required: true

jobs:
  release:
    needs: [build-apple-x86, build-apple-aarch, build-linux-x86]
    runs-on: ubuntu-18.04
    steps:
      - name: Create release using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/releases \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/vnd.github.v3+json' \
          --data '{"tag_name": "${{ github.event.inputs.tag }}"}' \
          --fail
      - uses: actions/download-artifact@v3
      - run: ls
  build-apple-x86:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "${{ github.event.inputs.tag }}"
      - run: rustup target add x86_64-apple-darwin
      - run: cargo build --release --target x86_64-apple-darwin
      - uses: actions/upload-artifact@v2
        with:
          name: x86_64-apple-darwin
          path: ./target/x86_64-apple-darwin/release/cli
  build-apple-aarch:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "${{ github.event.inputs.tag }}"
      - run: rustup target add aarch64-apple-darwin
      - run: cargo build --release --target aarch64-apple-darwin
      - uses: actions/upload-artifact@v2
        with:
          name: aarch64-apple-darwin
          path: ./target/aarch64-apple-darwin/release/cli
  build-linux-x86:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "${{ github.event.inputs.tag }}"
      - run: rustup target add x86_64-unknown-linux-gnu
      - run: cargo build --release --target x86_64-unknown-linux-gnu
      - uses: actions/upload-artifact@v2
        with:
          name: x86_64-unknown-linux-gnu
          path: ./target/x86_64-unknown-linux-gnu/release/cli
